{{- $root := . }}
{{- if eq (include "netclab.hasVeth" .) "true" }}

{{- $networkTypeMap := include "netclab.networkTypeMap" $root | fromYaml }}

apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: veth-cleanup
  labels:
    app: veth-cleanup
    {{- include "netclab.labels" $root | nindent 4 }}
  annotations:
    helm.sh/hook: post-delete
    helm.sh/hook-weight: "-5"
spec:
  selector:
    matchLabels:
      app: veth-cleanup
  template:
    metadata:
      labels:
        app: veth-cleanup
    spec:
      terminationGracePeriodSeconds: 0
      hostNetwork: true
      hostPID: true
      containers:
      - name: cleanup-veth
        image: alpine:3.20
        securityContext:
          privileged: true
        command:
        - /bin/sh
        - -c
        - |
          set -eux

        {{- range $network := $root.Values.topology.networks }}
        {{- if eq (index $networkTypeMap $network.name) "veth" }}
        {{- $nodesWithVethpair := list }}
        
        {{- range $node := $root.Values.topology.nodes }}
        {{- range $iface := .interfaces }}
        {{- if eq $iface.network $network.name }}

        {{- $nodesWithVethpair = append $nodesWithVethpair $node.name }}

        {{- end }}
        {{- end }}
        {{- end }}

        {{- if eq (len $nodesWithVethpair) 2 }}
          {{- $vethA := printf "%s-%s" $network.name (index $nodesWithVethpair 0) }}
          {{- $vethB := printf "%s-%s" $network.name (index $nodesWithVethpair 1) }}

          if ip link show {{ $vethA }} >/dev/null 2>&1; then
            ip link del {{ $vethA }}
          fi
          if ip link show {{ $vethB }} >/dev/null 2>&1; then
            ip link del {{ $vethB }}
          fi

        {{- end }}

        {{- end }}
        {{- end }}
          sleep infinity  # keep pod alive to prevent restart
      tolerations:
        - operator: Exists
      nodeSelector:
        kubernetes.io/os: linux

{{- end }}
