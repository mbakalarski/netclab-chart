{{- if .Capabilities.APIVersions.Has "k8s.cni.cncf.io/v1" }}
{{- $root := . }}

{{- $networkTypeMap := include "netclab.networkTypeMap" $root | fromYaml }}

{{- range .Values.topology.networks }}

{{- if eq (index $networkTypeMap .name) "veth" }}
{{- $networkName := .name }}
{{- range $root.Values.topology.nodes }}
{{- $nodeName := .name }}
{{- range .interfaces }}
{{- if eq .network $networkName }}
{{- $deviceName := printf "%s-%s" $networkName $nodeName }}
---
apiVersion: "k8s.cni.cncf.io/v1"
kind: NetworkAttachmentDefinition
metadata:
  name: {{ $deviceName }}
  labels: {{- include "netclab.labels" $root | nindent 4 }}
spec:
  config: '{
      "cniVersion": "0.3.1",
      "name": "{{ $deviceName }}",
      "plugins": [
        {
          "type": "host-device",
          "device": "{{ $deviceName }}",
          "ipam": {}
        }
      ]
    }'

{{- end}} # if eq .network $networkName
{{- end}}  # range .interfaces
{{- end}}  # range $root.Values.topology.nodes
{{- else}} # if eq (index $networkTypeMap .name) "veth"
---
apiVersion: "k8s.cni.cncf.io/v1"
kind: NetworkAttachmentDefinition
metadata:
  name: {{ .name }}
  labels: {{- include "netclab.labels" $root | nindent 4 }}
spec:
  config: '{
      "cniVersion": "0.3.1",
      "name": "{{ .name }}",
      "plugins": [
        {
          "type": "bridge",
          "bridge": "{{ .name }}",
          "ipam": {}
        }
      ]
    }'
{{- end }} # if eq (index $networkTypeMap .name) "veth"

{{- end }} # range .Values.topology.networks
{{- else }} # if .Capabilities.APIVersions.Has "k8s.cni.cncf.io/v1"
{{ fail "‚ùå Multus CNI CRD (k8s.cni.cncf.io/v1) not found. Install Multus before proceeding." }}
{{- end }} # if .Capabilities.APIVersions.Has "k8s.cni.cncf.io/v1"
